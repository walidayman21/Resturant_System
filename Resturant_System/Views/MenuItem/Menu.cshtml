@* @model IEnumerable<MenuItem>

@{
    ViewData["Title"] = "Menu";
}

<h1>Menu</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSpicy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsHealthy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImgUrl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSpicy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsHealthy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                <a asp-action="Update" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@

@model IEnumerable<MenuItem>
@{
    ViewData["Title"] = "Menu";
}

@{
    Layout = "_AdminLayout";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="display-4 fw-bold text-dark">
                    <i class="bi bi-card-list me-2"></i>Menu Items
                </h1>
                <a asp-action="Create" class="btn btn-primary btn-lg shadow-sm">
                    <i class="bi bi-plus-circle me-2"></i>Create New Item
                </a>
            </div>
            <p class="text-muted mt-2">Manage your restaurant menu items</p>
        </div>
    </div>

    <!-- Menu Items Grid -->
    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                <div class="card h-100 shadow-sm border-0 hover-shadow">
                    <!-- Image -->
                    <div class="position-relative">
                        @if (!string.IsNullOrEmpty(item.ImgUrl))
                        {
                            <img src="@item.ImgUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                            </div>
                        }

                        <!-- Status Badges -->
                        <div class="position-absolute top-0 end-0 m-2">
                            @if (!item.IsAvailable)
                            {
                                <span class="badge bg-danger">Unavailable</span>
                            }
                            @if (item.IsDeleted)
                            {
                                <span class="badge bg-dark">Deleted</span>
                            }
                    </div>
                </div>

                <!-- Card Body -->
                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h5 class="card-title fw-bold text-dark mb-0">@item.Name</h5>
                        <span class="badge bg-dark fs-6 ms-2">$@item.Price.ToString("F2")</span>
                    </div>

                    <p class="card-text text-muted small flex-grow-1" style="min-height: 60px;">
                        @(string.IsNullOrEmpty(item.Description) ? "No description available" :
                                                (item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description))
                    </p>

                        <!-- Spicy and Healthy Badges -->
                    @if (item.IsSpicy || item.IsHealthy)
                        {
                            <div class="mb-3">
                                @if (item.IsSpicy)
                                {
                                    <span class="badge bg-warning text-dark me-1">🌶️ Spicy</span>
                                }
                                @if (item.IsHealthy)
                                {
                                    <span class="badge bg-success">🥗 Healthy</span>
                                }
                            </div>
                        }

                        <!-- Category -->
                        <div class="mb-3">
                            <span class="badge bg-secondary">
                                <i class="bi bi-tag me-1"></i>@item.Category.Name
                            </span>
                        </div>

                        <!-- Metadata -->
                        <div class="small text-muted mb-3">
                            <div class="d-flex justify-content-between">
                                <span><i class="bi bi-calendar-plus me-1"></i>@item.CreatedAt.ToString("MMM dd, yyyy")</span>
                                @if (item.UpdatedAt.HasValue)
                                {
                                    <span><i class="bi bi-pencil me-1"></i>@item.UpdatedAt.Value.ToString("MMM dd, yyyy")</span>
                                }
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="btn-group w-100" role="group">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-eye me-1"></i>View
                            </a>
                            <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                <i class="bi bi-pencil me-1"></i>Edit
                            </a>
                            <button type="button" class="btn btn-outline-danger btn-sm delete-btn"
                                    onclick="showDeleteModal('@item.Id', '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(item.Name))')">
                                <i class="bi bi-trash me-1"></i>Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    @if (!Model.Any())
    {
        <div class="row mt-5">
            <div class="col-12 text-center">
                <i class="bi bi-inbox" style="font-size: 5rem; color: #ccc;"></i>
                <h3 class="text-muted mt-3">No Menu Items</h3>
                <p class="text-muted">Start by creating your first menu item</p>
                <a asp-action="Create" class="btn btn-primary mt-3">
                    <i class="bi bi-plus-circle me-2"></i>Create First Item
                </a>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center py-3">
                    <i class="bi bi-trash text-danger" style="font-size: 4rem;"></i>
                    <h5 class="mt-3">Are you sure you want to delete this item?</h5>
                    <p class="text-muted mb-0">
                        <strong id="itemNameDisplay"></strong>
                    </p>
                    <p class="text-danger small mt-2">This action cannot be undone!</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Cancel
                </button>
                <form id="deleteForm" asp-action="Delete" asp-controller="MenuItem" method="post" style="display: inline;">
                    <input type="hidden" id="deleteItemId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .hover-shadow {
        transition: all 0.3s ease;
    }

        .hover-shadow:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
        }

    .card-img-top {
        transition: transform 0.3s ease;
    }

    .card:hover .card-img-top {
        transform: scale(1.05);
    }

    .card {
        overflow: hidden;
    }

    .modal-content {
        border: none;
        border-radius: 15px;
        overflow: hidden;
    }

    .modal-header {
        border-bottom: none;
    }

    .modal-footer {
        border-top: 1px solid #dee2e6;
    }
</style>

@section Scripts {
    <script>
        var deleteModal = null;

        document.addEventListener('DOMContentLoaded', function () {
            deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        });

        function showDeleteModal(itemId, itemName) {
            document.getElementById('itemNameDisplay').textContent = itemName;

            document.getElementById('deleteItemId').value = itemId;

            deleteModal.show();
        }
    </script>
}

<!-- Add Bootstrap Icons CDN to your layout if not already included -->
<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"> -->