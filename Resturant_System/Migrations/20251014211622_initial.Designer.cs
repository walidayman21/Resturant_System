// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resturant_System.Context;

#nullable disable

namespace Resturant_System.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20251014211622_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Resturant_System.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Appetizers",
                            Type = "Starter"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Main Course",
                            Type = "Main"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Desserts",
                            Type = "Dessert"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Beverages",
                            Type = "Drinks"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Salads",
                            Type = "Starter"
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, Cairo, Egypt",
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Ahmed Mohamed",
                            PhoneNumber = "01012345678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Nile St, Giza, Egypt",
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Fatma Hassan",
                            PhoneNumber = "01123456789"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pyramids Rd, Alexandria, Egypt",
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Omar Ali",
                            PhoneNumber = "01234567890"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Tahrir Sq, Cairo, Egypt",
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Mona Ibrahim",
                            PhoneNumber = "01545678901"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Corniche St, Luxor, Egypt",
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Khaled Mahmoud",
                            PhoneNumber = "01098765432"
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpicy")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Crispy chicken wings with buffalo sauce",
                            ImgUrl = "/images/chicken-wings.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = true,
                            Name = "Chicken Wings",
                            Price = 85.00m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Deep fried mozzarella with marinara sauce",
                            ImgUrl = "/images/mozzarella-sticks.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Mozzarella Sticks",
                            Price = 65.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Vegetable spring rolls with sweet chili sauce",
                            ImgUrl = "/images/spring-rolls.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = false,
                            Name = "Spring Rolls",
                            Price = 55.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Classic pizza with tomato, mozzarella and basil",
                            ImgUrl = "/images/margherita-pizza.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Margherita Pizza",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Juicy beef patty with lettuce, tomato and cheese",
                            ImgUrl = "/images/beef-burger.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Beef Burger",
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Marinated grilled chicken breast with vegetables",
                            ImgUrl = "/images/grilled-chicken.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = false,
                            Name = "Grilled Chicken",
                            Price = 110.00m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Creamy pasta with bacon and parmesan",
                            ImgUrl = "/images/pasta-carbonara.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Pasta Carbonara",
                            Price = 105.00m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Red curry with chicken and vegetables",
                            ImgUrl = "/images/thai-curry.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = true,
                            Name = "Spicy Thai Curry",
                            Price = 115.00m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Warm chocolate cake with molten center",
                            ImgUrl = "/images/lava-cake.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Chocolate Lava Cake",
                            Price = 60.00m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Classic Italian dessert with coffee and mascarpone",
                            ImgUrl = "/images/tiramisu.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Tiramisu",
                            Price = 70.00m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "New York style cheesecake with berry compote",
                            ImgUrl = "/images/cheesecake.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Cheesecake",
                            Price = 65.00m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Freshly squeezed orange juice",
                            ImgUrl = "/images/orange-juice.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = false,
                            Name = "Fresh Orange Juice",
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Coca Cola, Sprite, or Fanta",
                            ImgUrl = "/images/soft-drink.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Soft Drink",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cold brew coffee with milk",
                            ImgUrl = "/images/iced-coffee.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = false,
                            IsSpicy = false,
                            Name = "Iced Coffee",
                            Price = 35.00m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Romaine lettuce with parmesan and croutons",
                            ImgUrl = "/images/caesar-salad.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = false,
                            Name = "Caesar Salad",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tomatoes, cucumber, olives and feta cheese",
                            ImgUrl = "/images/greek-salad.jpg",
                            IsAvailable = true,
                            IsDeleted = false,
                            IsHealthy = true,
                            IsSpicy = false,
                            Name = "Greek Salad",
                            Price = 55.00m
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<decimal>("DeliveryFee")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<decimal>("Discounts")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PlacingOrder")
                        .HasColumnType("int");

                    b.Property<int>("PreparationTimeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TableNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = 1,
                            DeliveryFee = 0.00m,
                            DeliveryTime = 0,
                            Discounts = 0.00m,
                            IsDeleted = false,
                            Notes = "No onions please",
                            OrderStatus = 5,
                            PlacingOrder = 1,
                            PreparationTimeMinutes = 25,
                            Subtotal = 240.00m,
                            TableNumber = 5,
                            Tax = 20.40m,
                            TotalAmount = 260.40m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = 2,
                            DeliveryAddress = "456 Nile St, Giza, Egypt",
                            DeliveryFee = 30.00m,
                            DeliveryTime = 30,
                            Discounts = 0.00m,
                            IsDeleted = false,
                            Notes = "Call when arriving",
                            OrderStatus = 4,
                            PlacingOrder = 3,
                            PreparationTimeMinutes = 20,
                            Subtotal = 180.00m,
                            Tax = 15.30m,
                            TotalAmount = 225.30m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = 3,
                            DeliveryFee = 0.00m,
                            DeliveryTime = 0,
                            Discounts = 0.00m,
                            IsDeleted = false,
                            OrderStatus = 3,
                            PlacingOrder = 2,
                            PreparationTimeMinutes = 15,
                            Subtotal = 150.00m,
                            Tax = 12.75m,
                            TotalAmount = 162.75m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 13, 22, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = 4,
                            DeliveryFee = 0.00m,
                            DeliveryTime = 0,
                            Discounts = 32.00m,
                            IsDeleted = false,
                            Notes = "Extra spicy",
                            OrderStatus = 2,
                            PlacingOrder = 1,
                            PreparationTimeMinutes = 30,
                            Subtotal = 320.00m,
                            TableNumber = 12,
                            Tax = 27.20m,
                            TotalAmount = 315.20m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = 5,
                            DeliveryAddress = "654 Corniche St, Luxor, Egypt",
                            DeliveryFee = 30.00m,
                            DeliveryTime = 30,
                            Discounts = 0.00m,
                            IsDeleted = false,
                            OrderStatus = 1,
                            PlacingOrder = 3,
                            PreparationTimeMinutes = 15,
                            Subtotal = 95.00m,
                            Tax = 8.08m,
                            TotalAmount = 133.08m
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 4,
                            OrderId = 1,
                            Quantity = 2,
                            Subtotal = 240.00m,
                            UnitPrice = 120.00m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 5,
                            OrderId = 2,
                            Quantity = 1,
                            Subtotal = 95.00m,
                            UnitPrice = 95.00m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 1,
                            Notes = "Extra sauce",
                            OrderId = 2,
                            Quantity = 1,
                            Subtotal = 85.00m,
                            UnitPrice = 85.00m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 15,
                            OrderId = 3,
                            Quantity = 1,
                            Subtotal = 50.00m,
                            UnitPrice = 50.00m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 6,
                            OrderId = 3,
                            Quantity = 1,
                            Subtotal = 110.00m,
                            UnitPrice = 110.00m
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 10, 13, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 2,
                            Subtotal = 210.00m,
                            UnitPrice = 105.00m
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 10, 13, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 9,
                            OrderId = 4,
                            Quantity = 2,
                            Subtotal = 120.00m,
                            UnitPrice = 60.00m
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 10, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            MenuItemId = 5,
                            OrderId = 5,
                            Quantity = 1,
                            Subtotal = 95.00m,
                            UnitPrice = 95.00m
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            OrderId = 1,
                            PaymentMethod = 1,
                            PaymentStatus = 2,
                            TotalAmount = 260.40m,
                            TransactionId = "TXN001"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            OrderId = 2,
                            PaymentMethod = 2,
                            PaymentStatus = 2,
                            TotalAmount = 225.30m,
                            TransactionId = "TXN002"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            OrderId = 3,
                            PaymentMethod = 1,
                            PaymentStatus = 2,
                            TotalAmount = 162.75m,
                            TransactionId = "TXN003"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 13, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            OrderId = 4,
                            PaymentMethod = 3,
                            PaymentStatus = 1,
                            TotalAmount = 315.20m,
                            TransactionId = "TXN004"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            OrderId = 5,
                            PaymentMethod = 1,
                            PaymentStatus = 1,
                            TotalAmount = 133.08m,
                            TransactionId = "TXN005"
                        });
                });

            modelBuilder.Entity("Resturant_System.Models.MenuItem", b =>
                {
                    b.HasOne("Resturant_System.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Resturant_System.Models.Order", b =>
                {
                    b.HasOne("Resturant_System.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Resturant_System.Models.OrderItems", b =>
                {
                    b.HasOne("Resturant_System.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Resturant_System.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Resturant_System.Models.Payment", b =>
                {
                    b.HasOne("Resturant_System.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Resturant_System.Models.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Resturant_System.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Resturant_System.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Resturant_System.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Resturant_System.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
